extends ../layouts/template.pug

block head
  // Only list-specific CSS and JS for this template
  link(rel="stylesheet", href="/styles/resource-list.css") 
  link(rel="stylesheet", href="/styles/toggle-switch.css")
  script(src="/js/category-sorting.js", defer)

block content
  .content-container
    h1= title 

    // --- Sorting Options UI (Frontend) ---
    .sorting-controls
      .toggle-switch-group#sort-by-toggle(role="radiogroup", aria-label="Sort Articles By")
        each optionValue, optionKey in sortingOptions
          label.toggle-switch-button(for=`sort-${optionKey}`)
            input(
              type="radio",
              id=`sort-${optionKey}`,
              name="sort-order",
              value=optionKey,
              checked=(optionKey === 'default')
            )
            span.button-text= optionValue.label 
      
      // IMPORTANT: Embed the article data and sorting options for client-side JavaScript
      script.
        window.categoryArticles = !{JSON.stringify(content)};
        window.sortingOptions = !{JSON.stringify(sortingOptions)};
        window.filteringOptions = !{JSON.stringify(filteringOptions)};
        window.currentCategoryIdentifier = '#{category}';

    // --- Article List Container (Always a List for this template) ---
    #article-list-container.resource-list-container
      if content && content.length > 0
        // Render as an unordered list (ul) with groups
        - let lastGroup = null;
        ul.resource-list
          each article in content
            // Determine if grouping headers are needed for the current sort
            - const currentSortConfig = sortingOptions.default;
            - const requiresGrouping = currentSortConfig && currentSortConfig.key;

            if requiresGrouping && article[currentSortConfig.key] && article[currentSortConfig.key] !== lastGroup
              h2.resource-group-title= article[currentSortConfig.key].replace(/-/g, ' ').replace(/\b\w/g, (l) => l.toUpperCase())
              - lastGroup = article[currentSortConfig.key]
            li
              // Render title directly (no problemId for math)
              a(href=`/${category}/${article.slug}`)= article.title
      else
        p No articles found for this category.